#!/usr/bin/env sh
set -e

function warn() {
	echo $1 >&2
}

GIT_VERSION=$(git --version | cut -d' ' -f3)

if [ $GIT_VERSION \< '1.6.5' ]; then
	warn "this version of $0 need git 1.6.5 or higher"
	exit 1
fi

if [ $# -lt 2 ]; then
	warn "Usage: $0 url trybranch1 [, trybranch2, ...]"
	exit 1
fi

url=$1 ; shift

GIT_WORK_TREE=$(pwd)/$(basename `echo "$url" | awk -F':' '{print $NF}'` .git)
GIT_DIR="$GIT_WORK_TREE/.git"

if [ -f $GIT_DIR/FIDO ]; then
	warn "already slobberd all over $GIT_DIR"
	exit
fi

if ! [ -d $GIT_DIR ]; then
	mkdir -p $GIT_DIR
	cd $GIT_WORK_TREE
	git init >&2
	echo test
fi

cd $GIT_WORK_TREE

export GIT_WORK_TREE=$GIT_WORK_TREE
export GIT_DIR=$GIT_DIR

if ! git remote | grep -q origin; then
	git remote add origin $url
fi

git fetch origin

branches=$(git branch -a)

while [ $# -gt 0 ]; do
	attempt="remotes/origin/$1"
	warn "attempting $attempt"
	if echo $branches | grep -q "$attempt"; then
		git reset --hard "$attempt" >&2
		git branch -M "$1" >&2
		touch "$GIT_DIR/FIDO"
		warn "success"
		echo $GIT_WORK_TREE
		exit
	fi
	shift
done

warn "no branch given was found"
exit 1
