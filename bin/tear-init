#!/bin/sh
set -e

function tildize() {
	echo $(echo $1 | sed "s|$HOME|~|")
}

tear_dir=~/.tear
profile=~/.profile

USAGE="[-p <dir>][-d <dir>]
Create a directory structure for tear in $tear_dir or
the <dir> given to --base-dir

  -d, --base-dir <dir>  override default tear directory 
                        (default is $(tildize $tear_dir))

  -p, --profile  <dir>  override default profile script
                        (default is $(tildize $profile))

  -h, --help            show this message"

function see_usage() {
	test -n "$1" && echo "!! $1" >&2 && echo >&2
	echo "Usage: $0 $USAGE" >&2
	exit 1
}

while [ $# -gt 0 ]; do
	case "$1" in
		-d|--base-dir)
			test $# -lt 2 && see_usage "missing argument for $1"
			tear_dir=$2
			shift; shift
			;;
		-p|--profile)
			test $# -lt 2 && see_usage "missing argument for $1"
			profile=$2
			shift; shift
			;;
		-h|--help)
			see_usage
			;;
		*)
			see_usage "invalid argument $1"
	esac
done

mkdir -p $tear_dir/bin
mkdir -p $tear_dir/lib

TEARCONFIG="
## TEAR setup
TEARDIR=$TEARDIR
PATH=\$TEARDIR:\$PATH
RUBYLIB=\$TEARDIR/lib:\$RUBYLIB
export TEARDIR PATH RUBYLIB
## end TEAR setup"

## Write the tear config to the profile if it's not there
touch $profile
if ! grep -q "## TEAR setup" $profile; then
	echo "$TEARCONFIG" >> $profile
fi

## Send source sh script to stdout
echo "You'll need to source your $profile" >&2
echo ". $(echo $profile | sed "s|$HOME|~|")"

exit
