#!/usr/bin/env sh
# USAGE
# url [trybranch1][trybranch2][...]
# git-clone with branch failover

. $(dirname $0)/tear-common

if [ $# -lt 2 ]; then
	see_usage "fido needs at least 1 try-branch"
fi

function _git() {
	git $@ >&2
}

function warn() {
	echo $@ >&2
}

url=$1 ; shift

GIT_WORK_TREE=$(pwd)/$(basename `echo "$url" | awk -F':' '{print $NF}'` .git)
GIT_DIR="$GIT_WORK_TREE/.git"

if [ -f $GIT_DIR/FIDO ]; then
	die "already slobberd all over $GIT_DIR"
fi

if ! [ -d $GIT_DIR ]; then
	mkdir -p $GIT_DIR
	cd $GIT_WORK_TREE
	_git init
fi

cd $GIT_WORK_TREE

export GIT_WORK_TREE=$GIT_WORK_TREE
export GIT_DIR=$GIT_DIR

if ! git remote | grep -q origin; then
	_git remote add origin $url
fi

_git fetch origin 

branches=$(git branch -a)

while [ $# -gt 0 ]; do
	attempt="remotes/origin/$1"
	warn "attempting $attempt"
	if echo $branches | grep -q "$attempt"; then
		_git reset --hard "$attempt"
		_git branch -M "$1"
		touch "$GIT_DIR/FIDO"
		warn "success"
		git rev-parse HEAD
		exit
	fi
	shift
done

die "no branch given was found"
